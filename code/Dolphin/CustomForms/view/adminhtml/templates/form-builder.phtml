<script>
    require([
        'Magento_Ui/js/lib/validation/validator',
        'jquery',
        'jquery/ui',
        'mage/translate'
    ], function (validator, $) {
        var id;

        setTimeout(() => {
            var getFormBuilder = $('[name="textarea_formbuilder"]');
            var formBuilderAttributes = {
                disabledAttrs: [
                        'inline',
                        'access',
                        'toggle',
                        'other',
                    ],
                    disabledSubtypes: {
                        text: ['color', 'tel'],
                        date: ['time'],
                        textarea: ['tinymce', 'quill']
                    },
                typeUserEvents: {
                    '*': {
                        onadd: function (fld) {
                            if (!id) {
                            var fieldNameVal = $('.fld-name', fld).val();
                            var fieldName = $('.fld-name', fld);
                                if (fieldNameVal) {
                                    setTimeout(() => {
                                        fieldName.val('');
                                    }, 1000);
                                } else {
                                    console.log("match not found");
                                }
                            }
                        },
                        onclone: function (fld) {
                            console.log(fld);
                            if (!id) {
                            var cloneFieldNameVal = $('.fld-name', fld).val();
                            var cloneFieldName = $('.fld-name', fld);
                                if (cloneFieldNameVal) {
                                    setTimeout(() => {
                                        cloneFieldName.val('');
                                    }, 1000);
                                } else {
                                    console.log("match not found");
                                }
                            }
                        }
                    }
                },
                showActionButtons: true,
                scrollToFieldOnAdd: false
            }
            var formBuilder = $(getFormBuilder).formBuilder(formBuilderAttributes);

            $(document).on('click', '.formSave', function (event) {
                $('[name="formbuilder_data"]').val(formBuilder.actions.getData('json')).trigger('change');
            });
            formBuilder.promise.then(function () {
                console.log("formBuilder has been initialized");

                var url_my_string = "<?php echo $block->getUrl('*/*/*', ['_current' => true, '_use_rewrite' => true]) ?>";

                try {
                    var myUrl = new URL(url_my_string);
                    console.log("Full pathname:", myUrl.pathname);

                    var segments = myUrl.pathname.split('/');
                    id = findNumericSegment(segments);

                    console.log("id:", id);

                    if (id) {
                        console.log($('[name="formbuilder_data"]').val());
                        formBuilder.actions.setData($('[name="formbuilder_data"]').val());
                    }
                } catch (error) {
                    console.error("Error parsing URL:", error);
                }
            });

            function findNumericSegment(segments) {
                for (var i = segments.length - 1; i >= 0; i--) {
                    var segment = segments[i];
                    if (!isNaN(segment) && segment.trim() !== '') {
                        return segment;
                    }
                }
                return null;
            }
        }, 200);

        validator.addRule(
            'custom-validation',
            function (value) {
                var result = true;
                $('.fld-name').each(function () {
                    var fldValue = $(this).val();
                    var fldElement = $(this).closest('li');
                    var fldDash = fldValue.indexOf('-') >= 0;
                    if (fldValue.trim() === '' || fldValue !== fldValue.toLowerCase() || fldDash) {
                        fldElement.css('border', '1px solid red');
                        $(this).css('border', '1px solid red');
                        result = false;
                    } else {
                        fldElement.css('border', '');
                        $(this).css('border', '');
                    }
                });
                console.log(result);
                return result;
            },
            $.mage.__('The name attribute of the field cannot be empty and can`t contains dash (`-`) instead of use underscore (`_`), and it should be in lowercase within the value of the name attribute. Spaces are not allowed.')
        );
    });
</script>
